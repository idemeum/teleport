#!/bin/bash

AGENT_NAME=$1
CONFIG_FILE=$2
while ! [[ "${AGENT_NAME}" =~ ^[a-zA-Z0-9_-]{3,256}$ ]]
do
  if [ ! -z "$AGENT_NAME" ]; then
    echo "[Error] Invalid agent name : ${AGENT_NAME}"
  else
    echo "[Error] Agent name not provided."
  fi
  echo "        Enter valid agent name."
  echo "        Only alphanumeric characters allowed & '_', '-' are allowed with length of min 3 / max 256."
  read -p  "[Input] Enter Name : " AGENT_NAME
done
echo "[Info ] Installing Agent  [Name: ${AGENT_NAME}]"

while [ ! -f "${CONFIG_FILE}" ]
do
  if [ ! -z "$CONFIG_FILE" ]; then
    echo "[Error] Invalid agent config file : ${CONFIG_FILE}"
  else
    echo "[Error] Agent config file not provided."
  fi
  read -p  "[Input] Config File Path : " CONFIG_FILE
done

echo "[Info ] Installing Agent  [Name: ${AGENT_NAME}]"

AGENT_SERVICE_CONFIG="/etc/systemd/system/${AGENT_NAME}.service"
AGENT_CONFIG_FILE="/etc/${AGENT_NAME}.yaml"

if test -f "${AGENT_SERVICE_CONFIG}"; then
    echo "[Error] Service with same name is already installed. [$AGENT_SERVICE_CONFIG]"
    exit 1
fi

if test -f "${AGENT_CONFIG_FILE}"; then
    echo "[Error] Agent config with same name already exists. [$AGENT_CONFIG_FILE]"
    exit 1
fi

echo "[Info ] Writing agent service : ${AGENT_SERVICE_CONFIG}"
sudo cat << EOS >> ${AGENT_SERVICE_CONFIG}
[Unit]
Description=Idemeum remote access agent service : ${AGENT_NAME}
After=network.target

[Service]
Type=simple
Restart=on-failure
EnvironmentFile=-/etc/default/idemeum
ExecStart=/usr/local/bin/idemeum start --pid-file=/run/${AGENT_NAME}.pid --config=${AGENT_CONFIG_FILE}
ExecReload=/bin/kill -HUP \$MAINPID
PIDFile=/run/${AGENT_NAME}.pid
LimitNOFILE=8192

[Install]
WantedBy=multi-user.target
EOS

echo "[Info ] Copying agent config : ${CONFIG_FILE} -> ${AGENT_CONFIG_FILE}"
sudo cp  $CONFIG_FILE $AGENT_CONFIG_FILE

echo "[Info ] Using `cat ${AGENT_CONFIG_FILE} | grep data_dir`"
echo "[Info ] Reloading systemctl daemons."
sudo systemctl daemon-reload
echo "[Info ] Enabling service : $AGENT_NAME"
sudo systemctl enable "$AGENT_NAME.service"
echo "[Info ] Starting agent ....."
sudo systemctl start $AGENT_NAME
echo "[Info ] checking agent status agent ....."
sudo systemctl status $AGENT_NAME
echo "*********************** Usage ************************"
echo "Lifecycle : sudo systemctl start|stop|status|restart|disable ${AGENT_NAME}"
echo "Logs      : sudo journalctl -fu ${AGENT_NAME}"
echo "Uninstall : run following commands"
echo "         sudo systemctl stop ${AGENT_NAME}"
echo "         sudo rm $AGENT_SERVICE_CONFIG"
echo "         sudo rm $AGENT_CONFIG_FILE"
echo "         sudo systemctl daemon-reload"
echo "******************************************************"